name: Ubuntu

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  PROJECT_NAME: Learn
  CTEST_OUTPUT_ON_FAILURE: 1
  INSTALL_LOCATION: .local
  # CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: x64

    - name: Cache pip
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Cache conan
      uses: actions/cache@v2
      with:
        path: ~/.conan
        key: ${{ runner.os }}-conan
        restore-keys: |
          ${{ runner.os }}-conan

    - name: cache dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: ${{ github.workspace }}/${{ env.INSTALL_LOCATION }}
        key: ${{ runner.os }}-dependencies

    - name: install conan
      run: |
        python3 -m pip install --upgrade pip setuptools wheel conan
        # sudo apt install python3-setuptools python3-wheel
        # pip3 install conan

    - name: configure
      run: cmake -Bbuild -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/$INSTALL_LOCATION -D${PROJECT_NAME}_ENABLE_CODE_COVERAGE=1 -DCMAKE_BUILD_TYPE=Debug

    - name: build
      run: cmake --build build -j4

    - name: test
      run: |
        cd build
        ctest --build-config Debug

    - name: collect code coverage
      run: bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
